(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{586:function(s,t,n){"use strict";n.r(t);var a=n(19),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("Badges",{attrs:{content:[{type:"tip",text:"了解"}]}}),s._v(" "),n("TimeToRead"),s._v(" "),n("p",[s._v("Webrtc Statistics Dictionary:")]),s._v(" "),n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RTCStatsType")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"codec"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("                        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// RTCPeerConnection流当前正在使用的编解码器                        ")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"inbound-rtp"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 收到的RTP流统计信息                                           ")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"outbound-rtp"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 发送的RTP流统计信息                                              ")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"remote-inbound-rtp"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 对端收到的RTP流统计信息                                            ")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"remote-outbound-rtp"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 对端发送的RTP流统计信息                                            ")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"media-source"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 发送到编码器的媒体信息                                          ")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"csrc"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("                         "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// RTP流CSRC                                                     ")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"peer-connection"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// RTCPeerConnection对象相关的统计信息                               ")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"data-channel"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// RTCDataChannel 相关的统计信息                                   ")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"stream"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("                       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 媒体轨道统计信息包含与特定MediaStream相关的统计信息              ")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"track"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("                        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 媒体轨道统计信息                                                     ")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"transceiver"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// RTCRtpTransceiver                                                ")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sender"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("                       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 媒体级指标相关的统计信息                                         ")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"receiver"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("                     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 特定接收器相关的统计数据和相应的媒体级指标                        ")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"transport"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 媒体传输统计信息                                                 ")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sctp-transport"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// RTCSctpTransport 对象相关的 SCTP 传输统计信息                   ")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"candidate-pair"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ICE候选对统计信息                                               ")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"local-candidate"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ICE 本地候选统计信息                                             ")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"remote-candidate"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ICE 远程候选统计信息                                             ")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"certificate"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// RTCIceTransport 使用的证书的信息                                 ")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ice-server"')]),s._v("                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 有关与ICE服务器的连接的信息                                  ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nRTCStatsType                                Dictionary                      \n"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"codec"')]),s._v("                                     RTCStats\n                                            RTCCodecStats\n                                            \n"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"inbound-rtp"')]),s._v("                               RTCStats\n                                            RTCRtpStreamStats\n                                            RTCReceivedRtpStreamStats\n                                            RTCInboundRtpStreamStats\n                                            \n​\n"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"outbound-rtp"')]),s._v("                              RTCStats\n                                            RTCRtpStreamStats\n                                            RTCSentRtpStreamStats\n                                            RTCOutboundRtpStreamStats\n                                            \n"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"remote-inbound-rtp"')]),s._v("                        RTCStats\n                                            RTCRtpStreamStats\n                                            RTCReceivedRtpStreamStats\n                                            RTCRemoteInboundRtpStreamStats\n                                            \n"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"remote-outbound-rtp"')]),s._v("                       RTCStats        \n                                            RTCRtpStreamStats\n                                            RTCSentRtpStreamStats\n                                            RTCRemoteOutboundRtpStreamStats\n                                            \n"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"media-source"')]),s._v("                              RTCStats\n                                            RTCMediaSourceStats\n                                            RTCAudioSourceStats\n                                            RTCVideoSourceStats\n                                            \n"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"csrc"')]),s._v("                                      RTCStats\n                                            RTCRtpContributingSourceStats\n                                            \n"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"peer-connection"')]),s._v("                           RTCStats\n                                            RTCPeerConnectionStats\n                                            \n"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"data-channel"')]),s._v("                              RTCStats\n                                            RTCDataChannelStats                 \n                                            \n"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"transceiver"')]),s._v("                               RTCStats            \n                                            RTCRtpTransceiverStats\n                                            \n"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sender"')]),s._v("                                    RTCStats\n                                            RTCMediaHandlerStats\n                                            RTCAudioSenderStats\n                                            RTCVideoSenderStats\n                                            \n"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"receiver"')]),s._v("                                  RTCStats\n                                            RTCMediaHandlerStats\n                                                                                \n"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"transport"')]),s._v("                                 RTCStats        \n                                            RTCTransportStats\n                                            \n"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sctp-transport"')]),s._v("                            RTCStats\n                                            RTCSctpTransportStats\n                                            \n"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"candidate-pair"')]),s._v("                            RTCStats                    \n                                            RTCIceCandidatePairStats\n                                            \n"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"local-candidate"')]),s._v("                           RTCStats                \n                                            RTCIceCandidateStats\n                                            \n"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"remote-candidate"')]),s._v("                          RTCStats                \n                                            RTCIceCandidateStats\n                                            \n"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"certificate"')]),s._v("                               RTCStats                \n                                            RTCCertificateStats\n                                            \n"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ice-server"')]),s._v("                                RTCStats        \n                                            RTCIceServerStats\n                                            \nTCRtpStreamStats：适用于任何 RTP 流任何端的统计信息 RTCReceivedRtpStreamStats：在 RTP 流的接收端测量的统计数据，已知是因为它们在本地测量或通过 RTCP 接收器报告 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("RR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 或扩展报告 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("XR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 块传输。 RTCInboundRtpStreamStats：只能在 RTP 流的本地接收端测量的统计信息。 RTCRemoteInboundRtpStreamStats：与 RTP 流的远程接收端相关的统计信息 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 通常通过将本地数据与通过 RTCP RR 或 XR 块接收的数据相结合来计算。 RTCSentRtpStreamStats：在 RTP 流的发送端测量的统计数据，已知是因为它们是在本地测量的，或者因为它们是通过 RTCP 接收的，通常在 RTCP 发送者报告 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 中 RTCOutboundRtpStreamStats：本地测量的统计数据。 RTCRemoteOutboundRtpStreamStats：与 RTP 流的远程发送端相关的统计信息，通常基于 RTCP SR 计算\n\ndictionary RTCRtpStreamStats "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RTCStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    required "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("      ssrc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 同步源标识符,每个[RFC3550]的无符号整数值")]),s._v("\n    required DOMString          kind"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// “音频”或“视频, 匹配”MediaStreamTrack的kind属性")]),s._v("\n    DOMString                   transportId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 唯一标识符与此RTP流相关联的RTCTransportStats")]),s._v("\n    DOMString                   codecId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 唯一标识符与RTP流关联的RTCCodecStats的对象相关联")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RTCCodecType")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"encode"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"decode"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\ndictionary RTCCodecStats "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RTCStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    required "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// RTP编码或解码中使用的有效载荷类型")]),s._v("\n    RTCCodecType                codecType"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 编码或解码 取决于此对象是否表示实现准备进行编码或解码的媒体格式")]),s._v("\n                                                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果字典成员不存在，则意味着该媒体格式既可以编码也可以解码")]),s._v("\n    required DOMString          transportId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用此编解码器的传输的唯一标识符,可用于查找相应的RTCTransportStats对象")]),s._v("\n    required DOMString          mimeType"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 编解码器MIME媒体类型/子类型。 例如:video/vp8或等效文件")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("               clockRate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 媒体采样率")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("               channels"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 通道数,立体声使用2，其他大多数情况下都没有")]),s._v("\n    DOMString                   sdpFmtpLine"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// SDP中的a=fmtp行对应于编解码器，即在PT后面的冒号之后。 这由第 5.7 节中的 [JSEP] 定义。")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\ndictionary RTCReceivedRtpStreamStats "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RTCRtpStreamStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("          packetsReceived"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// SSRC接收的RTP数据包总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                   packetsLost"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// SSRC丢失的RTP数据包总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("                      jitter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// SSRC数据包抖动,以秒为单位测量")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("          packetsDiscarded"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 由于迟到或早到而被抖动缓冲区丢弃的RTP数据包的累积数量")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("          packetsRepaired"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 应用错误恢复机制 [XRBLOCK-STATS]后修复的丢失RTP数据包的累积数量")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("          burstPacketsLost"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 丢失突发期间丢失的RTP数据包的累积数量")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("          burstPacketsDiscarded"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在丢弃突发期间丢弃的RTP数据包的累积数量")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("               burstLossCount"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 丢失RTP数据包的累积突发数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("               burstDiscardCount"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 丢弃的RTP数据包的累积突发数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("                      burstLossRate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 突发期间丢失的RTP数据包占突发中预期的RTP数据包总数的比例")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("                      burstDiscardRate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 突发期间丢弃的RTP数据包占突发中预期的RTP数据包总数的比例")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("                      gapLossRate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在间隙期间丢失的 RTP 数据包的比例")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("                      gapDiscardRate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在间隙期间丢弃的 RTP 数据包的比例")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("               framesDropped"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只存在于视频,在解码之前丢弃或丢弃的帧总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("               partialFramesLost"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只存在于视频,丢失的部分帧的累积数量")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("               fullFramesLost"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只存在于视频,丢失的完整帧的累积数量")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\ndictionary RTCInboundRtpStreamStats "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RTCReceivedRtpStreamStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// RTP 媒体流的测量指标")]),s._v("\n    required DOMString  receiverId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 查找接收此流的RTCAudioReceiverStats或RTCVideoReceiverStats 对象的统计ID")]),s._v("\n    DOMString           remoteId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 用于查找同一 SSRC 的远程 RTCRemoteOutboundRtpStreamStats 对象")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       framesDecoded"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// RTP 流正确解码的帧总数，即如果没有丢帧将显示的帧数。")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       keyFramesDecoded"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只存在于视频。 它表示关键帧的总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       frameWidth"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只存在于视频。 表示最后解码帧的宽度")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       frameHeight"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只存在于视频。 表示最后解码帧的高度")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       frameBitDepth"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只存在于视频。 表示最后一个编码帧的每个像素的位深度。典型值为 24、30 或 36 位")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("              framesPerSecond"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只存在于视频。 最后一秒的编码帧数。这可能低于媒体源帧速率")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("  qpSum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只存在于视频。 此接收器解码的帧的 QP 值的总和。 帧数以framesDecoded 为单位")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("              totalDecodeTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 解码此流的 framesDecoded 帧所花费的总秒数,")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 以通过将此值除以framesDecoded 来计算平均解码时间")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 解码一帧所需的时间是向解码器馈送一帧和解码器返回该帧的解码数据之间经过的时间")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("              totalInterFrameDelay"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 连续解码的帧之间的帧间延迟总和（以秒为单位）")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// (totalSquaredInterFrameDelay -   ")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// totalInterFrameDelay^2/framesDecoded)/framesDecoded")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 从totalInterFrameDelay、totalSquaredInterFrameDelay ")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 和framesDecoded 计算帧间延迟方差")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("              totalSquaredInterFrameDelay"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 连续解码的帧之间的平方帧间延迟的总和（以秒为单位）")]),s._v("\n    boolean             voiceActivityFlag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只存在于音频。 其帧被传送到 RTCRtpReceiver 的 MediaStreamTrack ")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 以进行播放的最后一个 RTP 数据包是否包含语音活动，取决于扩展标头中 V 位的存在")]),s._v("\n    DOMHighResTimeStamp lastPacketReceivedTimestamp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 表示接收到此 SSRC 的最后一个数据包的时间戳")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("              averageRtcpInterval"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 两个连续复合 RTCP 数据包之间的平均 RTCP 间隔")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("  headerBytesReceived"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 为此SSRC接收的RTP标头和填充字节的总数。这不包括传输层标头的大小")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("  fecPacketsReceived"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 为此SSRC接收的RTP FEC数据包总数,")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当使用媒体数据包（例如，使用 Opus）在带内接收 FEC 数据包时，此计数器也可以增加")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("  fecPacketsDiscarded"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 为该SSRC接收的RTP FEC数据包总数,其中应用程序丢弃了纠错有效负载")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("  bytesReceived"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// SSRC接收的总字节数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("  packetsFailedDecryption"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 程序未能解密的 RTP 数据包的累积数量")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("  packetsDuplicated"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 由于重复而丢弃的累积数据包数。 重复的数据包不计入丢弃的数据包中")]),s._v("\n    record"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("USVString"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" perDscpPacketsReceived"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           \n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//为此SSRC接收的数据包总数,DSCP被标识为字符串形式的十进制整数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       nackCount"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 计算此接收器发送的图片丢失指示 (PLI) 数据包的总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       firCount"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只存在于视频。 计算此接收器发送的完整帧内请求 (FIR) 数据包的总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       pliCount"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只存在于视频。 计算此接收器发送的图片丢失指示 (PLI) 数据包的总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       sliCount"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只存在于视频。 计算此接收器发送的切片丢失指示 (SLI) 数据包的总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("              totalProcessingDelay"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 每个音频样本或视频帧从收到第一个 RTP 数据包的时间（接收时间戳）")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 到解码相应样本或帧的时间（解码的时间戳）所用时间的总和")]),s._v("\n    DOMHighResTimeStamp estimatedPlayoutTimestamp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这是此接收器曲目的估计播放时间。 ")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 播放时间是具有已知时间戳的最后一个可播放音频样本或视频帧的")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// NTP 时间戳（从 RTCP SR 数据包将 RTP 时间戳映射到 NTP 时间戳）")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("              jitterBufferDelay"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 抖动缓冲区的目的是将 RTP 数据包重新组合成帧（在视频的情况下）并平滑播放。")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 此处描述的模型假设样本或帧仍处于压缩状态且尚未解码。")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 它是每个音频样本或视频帧从抖动缓冲区接收到第一个数据包的时间")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//（摄取时间戳）到它退出抖动缓冲区的时间（发出时间戳）所用时间的总和，以秒为单位")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在音频的情况下，多个样本属于同一个 RTP 数据包")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 因此它们将具有相同的摄取时间戳，但不同的抖动缓冲区发出时间戳")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在视频的情况下，帧可能是通过多个 RTP 数据包接收的，")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 因此摄取时间戳是进入抖动缓冲区的最早数据包，发射时间戳是整个帧退出抖动缓冲区的时间")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 该指标在样本或帧退出时增加，在缓冲区中完成它们的时间")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// （并增加 jitterBufferEmittedCount）")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 平均抖动缓冲延迟可以通过将 jitterBufferDelay 与 ")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// jitterBufferEmittedCount 相除来计算")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("  jitterBufferEmittedCount"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 来自抖动缓冲区的音频样本或视频帧的总数（增加 jitterBufferDelay）")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("  totalSamplesReceived"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只存在于音频。在此 RTP 流上接收到的样本总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("  totalSamplesDecoded"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只存在于音频。在此 RTP 流上解码的样本总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("  samplesDecodedWithSilk"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 仅存在于音频且音频编解码器为Opus时。Opus 编解码器的 SILK 部分解码的样本总数。")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("  samplesDecodedWithCelt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 仅存在于音频且音频编解码器为Opus时。Opus 编解码器的 CELT 部分解码的样本总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("  concealedSamples"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只存在于音频,隐藏样本的样本总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("  silentConcealedSamples"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只存在于音频,插入的“无声”隐藏样本总数,播放静音样本会导致静音或舒适噪")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("  concealmentEvents"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只存在于音频,隐藏事件的数量。")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("  insertedSamplesForDeceleration"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只存在于音频,当播放速度减慢时，此计数器会根据接收到的样本数与播放的样本数之间的差异而增加")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("  removedSamplesForAcceleration"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  \n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只存在于音频,当播放加速时，此计数器增加接收的样本数与播放的样本数之间的差值")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("              audioLevel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只存在于音频。有关本地附加轨道的音频级别，请参阅 RTCAudioSourceStats。")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 该值介于 0..1（线性）之间，其中 1.0 表示 0 dBov，0 表示静音，")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0.5 表示声压级从 0 dBov 开始大约 6 dBSPL 变化。")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用 totalAudioEnergy 中描述的算法，在某个小区间内平均 audioLevel。")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用的间隔取决于实现。")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("              totalAudioEnergy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只存在于音频。表示接收轨道的音频能量。有关本地附加轨道的音频能量，")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 请参阅 RTCAudioSourceStats")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 对于接收到的每个音频样本（因此按 totalSamplesReceived 计数）")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将样本值除以最高强度的可编码值，平方， 然后乘以以秒为单位的样本持续时间。")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 换句话说，持续时间 * Math.pow(energy/maxEnergy, 2)。")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这可用于获得与 audioLevel 使用相同单位的均方根 (RMS) 值，如 [RFC6464] 中所定义。")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 可以使用公式 ")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Math.sqrt(totalAudioEnergy/totalSamplesDuration) 将其转换为这些单位。")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 也可以使用两个不同 getStats() 调用的值之间的差异来执行此计算，")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 以便计算任何所需时间间隔内的平均音频电平。")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 换句话说，做 Math.sqrt((energy2 - energy1)/(duration2 - duration1))。")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 例如，如果生成一个 10 毫秒的音频数据包，其 RMS 为 0.5（超出 1.0），")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 则应将 0.5 * 0.5 * 0.01 = 0.0025 添加到 totalAudioEnergy。")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果接收到另一个 RMS 为 0.1 的 10ms 数据包，")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这应该类似地将 0.0001 添加到 totalAudioEnergy。然后， ")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Math.sqrt(totalAudioEnergy/totalSamplesDuration) 变为 ")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Math.sqrt(0.0026/0.02) = 0.36，")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这与通过对连续 20 毫秒音频段进行 RMS 计算获得的值相同。")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果使用多个音频通道，则样本的音频能量是指任一通道的最高能量。")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("              totalSamplesDuration"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只存在于音频。 表示接收轨道的音频持续时间。 ")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 有关本地附加轨道的音频持续时间，请参阅 RTCAudioSourceStats")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       ramesReceived"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只存在于视频。 表示在此 RTP 流上接收到的完整帧的总数")]),s._v("\n    DOMString           decoderImplementation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 标识使用的解码器实现")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\ndictionary RTCRemoteInboundRtpStreamStats "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RTCReceivedRtpStreamStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    DOMString          localId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 查找RTCOutboundRtpStreamStats                 ")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("             roundTripTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 此 SSRC 的估计往返时间基于 RTCP 接收器报告 (RR) 中的 RTCP 时间戳，以秒为单位")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("             totalRoundTripTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 表示自会话开始以来所有往返时间测量的累积总和（以秒为单位）")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("             fractionLost"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 为此 SSRC 报告的部分丢包率")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" reportsReceived"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// SSRC 接收的 RTCP RR 块的总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" roundTripTimeMeasurements"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// SSRC 接收的包含有效往返时间的 RTCP RR 块的总数")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\ndictionary RTCSentRtpStreamStats "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RTCRtpStreamStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       packetsSent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// SRC发送的RTP数据包总数。这包括重传")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("  bytesSent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 为此SSRC发送的总字节数。这包括重传")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\ndictionary RTCOutboundRtpStreamStats "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RTCSentRtpStreamStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       rtxSsrc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ssrc")]),s._v("\n    DOMString           mediaSourceId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// stats 对象的标识符")]),s._v("\n    DOMString           senderId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// RTCAudioSenderStats 或 RTCVideoSenderStats 对象的统计ID")]),s._v("\n    DOMString           remoteId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 用于查找同一SSRC的远程 RTCRemoteInboundRtpStreamStats对象")]),s._v("\n    DOMString           rid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果已设置，则公开此 RTP 流的rid 编码参数，否则未定义")]),s._v("\n    DOMHighResTimeStamp lastPacketSentTimestamp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 表示为此 SSRC 发送最后一个数据包的时间戳")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("  headerBytesSent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 为此 SSRC 发送的 RTP 标头和填充字节的总数。 这不包括传输层标头的大小")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 例如 IP 或 UDP headerBytesSent + bytesSent等于通过传输作为有效负载发送的字节数")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 例如 IP 或 UDP headerBytesSent + bytesSent等于通过传输作为有效负载发送的字节数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       packetsDiscardedOnSend"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 由于套接字错误而被丢弃的此 SSRC 的 RTP 数据包总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("  bytesDiscardedOnSend"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 由于套接字错误而被丢弃的此 SSRC 的总字节数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       fecPacketsSent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 为此 SSRC 发送的 RTP FEC 数据包总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("  retransmittedPacketsSent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 为此 SSRC 重新传输的数据包总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("  retransmittedBytesSent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 为此 SSRC 重传的字节总数，仅包括有效载荷字节")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("              targetBitrate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 编码器目标比特率")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("  totalEncodedBytesTarget"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 每次对帧进行编码时，该值都会增加目标帧大小(以字节为单位)")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       frameWidth"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 最后一个编码帧的宽度, 编码帧的分辨率可能低于编码源")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       frameHeight"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 最后一个编码帧的高度, 编码帧的分辨率可能低于编码源")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       frameBitDepth"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 每个像素的位深度24、30、36")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("              framesPerSecond"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 最后一秒解码的帧数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       framesSent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// RTP 流上发送的帧总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       hugeFramesSent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 表示此RTP流发送的huge帧总数.根据定义,huge帧编码大小至少是帧平均大小的2.5倍")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       framesEncoded"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// RTP 媒体流成功编码的帧总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       keyFramesEncoded"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 关键帧的总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       framesDiscardedOnSend"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 由于套接字错误而为此 SSRC 丢弃的视频帧总数，即在将数据包交给套接字时发生套接字错误")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这可能由于各种原因而发生，包括缓冲区已满或没有可用内存。")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("  qpSum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 发送方编码的帧的QP值的总和")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("  totalSamplesSent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// RTP流发送的样本总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("  samplesEncodedWithSilk"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 仅存在于音频且音频编解码器为Opus时,Opus编解码器的SILK部分编码的样本总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("  samplesEncodedWithCelt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 仅存在于音频且音频编解码器为 Opus 时。 Opus 编解码器的 CELT 部分编码的样本总数")]),s._v("\n    boolean             voiceActivityFlag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只存在于音频,根据[RFC6464]中定义的扩展报头中 V 位的存在")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 最后发送的RTP数据包是否包含语音活动")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("              totalEncodeTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 编码此流的framesEncoded 帧所花费的总秒数。 ")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 可以通过将此值除以framesEncoded 来计算平均编码时间。 ")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 编码一帧所需的时间是向编码器提供一帧和编码器返回该帧的编码数据之间经过的时间。 ")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这不包括打包结果数据可能花费的任何额外时间")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("               totalPacketSendDelay"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 总数据包发送延迟")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("               averageRtcpInterval"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 两个连续复合RTCP数据包之间的平均 RTCP间隔。这是在发送复合 RTCP 报告时由发送端点计算的。")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 复合数据包必须至少包含一个RTCP RR 或 SR 块和一个带有 CNAME 项的 SDES 数据")]),s._v("\n    RTCQualityLimitationReason  qualityLimitationReason"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    \n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只存在于视频。 当前限制分辨率和/或帧率的原因，如果不受限制，则为“无”。")]),s._v("\n    record"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("DOMString"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" qualityLimitationDurations"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   \n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只存在于视频。 此流在每个质量限制状态中花费的总时间（以秒为单位）的记录")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("        qualityLimitationResolutionChanges"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    \n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 质量限制解决方案变更")]),s._v("\n    record"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("USVString"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("   perDscpPacketsSent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只存在于视频。由于质量受限而更改分辨率的次数,计数器最初为零，并在分辨率上升或下降时增加。 ")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 例如，如果将720p轨道作为480p发送一段时间，然后恢复为720p，   ")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 则qualityLimitationResolutionChanges的值为 2。")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("        nackCount"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 计算此发送方收到的否定确认 (NACK) 数据包的总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("        firCount"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只存在于视频。 计算此发送方收到的完整帧内请求 (FIR) 数据包的总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("        pliCount"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只存在于视频。 计算此发送方收到的图片丢失指示 (PLI) 数据包的总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("        sliCount"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只存在于视频。 计算此发送方收到的切片丢失指示 (SLI) 数据包的总数")]),s._v("\n    DOMString            encoderImplementation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 标识使用的编码器实现")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RTCQualityLimitationReason")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"none"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("                                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 分辨率和/或帧率不受限制")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cpu"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("                                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 由于CPU负载，分辨率和/或帧率主要受到限制")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bandwidth"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("                            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 由于带宽估计期间的拥塞线索，分辨率和/或帧率主要受到限制。 ")]),s._v("\n                                                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 典型的拥塞控制算法使用到达间隔时间、往返时间、数据包或其他拥塞线索来执行带宽估计")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"other"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("                                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 分辨率和/或帧率主要由于上述以外的原因而受到限制")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\ndictionary RTCRemoteOutboundRtpStreamStats "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RTCSentRtpStreamStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    DOMString           localId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 用于查找同一SSRC的本地RTCInboundRtpStreamStats对象")]),s._v("\n    DOMHighResTimeStamp remoteTimestamp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 表示远端发送这些统计信息的远程时间戳。这与时间戳不同，时间戳表示本端生成或接收统计信息的时间")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("  reportsSent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// SSRC 发送的 RTCP SR 块的总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("              roundTripTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// rtt往返时间")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("              totalRoundTripTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 总往返时间")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("  roundTripTimeMeasurements"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 往返时间测量,SSRC 接收的 RTCP 发送方报告 (SR) 块的总数")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\ndictionary RTCMediaSourceStats "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RTCStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 媒体源-帧速率和分辨率")]),s._v("\n    required DOMString  trackIdentifier"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// MediaStreamTrack的id属性值")]),s._v("\n    required DOMString  kind"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// MediaStreamTrack的kind属性的值。 这是“音频”或“视频”。 ")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果它是“音频”, 那么这个stats对象的类型是RTCAudioSourceStats。 ")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果它是“video”, 那么这个stats对象的类型是RTCVideoSourceStats")]),s._v("\n    boolean             relayedSource"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 源是远程的，例如如果它是通过 RTCPeerConnection 来自另一个主机，则为true。否则为假")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\ndictionary RTCAudioSourceStats "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RTCMediaSourceStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("    audioLevel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 媒体源的音频电平,0-1,其中1.0表示0 dBov，0表示静音，0.5表示声压级从0 dBov开始大约6dBSPL变化")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("    totalAudioEnergy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 总音频能量")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("    totalSamplesDuration"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 媒体源的音频持续时间")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("    echoReturnLoss"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 回声返回损失,仅当 MediaStreamTrack 来自应用了回声消除的麦克风时才存在。 以分贝计算")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("    echoReturnLossEnhancement"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 回波回波损耗增强,仅当 MediaStreamTrack 来自应用了回声消除的麦克风时才存在。 以分贝计算")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\ndictionary RTCVideoSourceStats "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RTCMediaSourceStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("        width"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 宽")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("        height"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 高")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("        bitDepth"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 位深")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("        frames"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 总帧数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("               framesPerSecond"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 最后一秒的编码帧数。这可能低于媒体源帧速率")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\ndictionary RTCRtpContributingSourceStats "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RTCStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    required "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" contributorSsrc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// stats对象表示的贡献源的SSRC标识符,32位无符号整数")]),s._v("\n    required DOMString     inboundRtpStreamId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 入站的RTP流ID")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("          packetsContributedTo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 此贡献源贡献的 RTP 数据包总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("                 audioLevel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 此源贡献的最后接收到 RTP数据包包含[RFC6465]混音器到客户端音频级别标头扩展, 0-1")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\ndictionary RTCPeerConnectionStats "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RTCStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("      \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       dataChannelsOpened"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 表示在其生命周期内进入“打开”状态的唯一RTCDataChannel的数量")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       dataChannelsClosed"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 表示在其生命周期内离开“打开”状态的唯一RTCDataChannel的数量")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       dataChannelsRequested"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// RTCPeerConnection 上成功的createDataChannel()调用返回的唯一RTCDataChannel的数量")]),s._v("\n     "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("      dataChannelsAccepted"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在RTCPeerConnection上的ondatachannel事件中发出信号的唯一RTCDataChannel的数量")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\ndictionary RTCRtpTransceiverStats "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RTCStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    required DOMString      senderId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// RTCRtpTransceiver关联的RTCRtpSender的stats对象的标识符")]),s._v("\n    required DOMString      receiverId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 与此stats对象表示的RTCRtpTransceiver关联的RTCRtpReceiver的stats对象的标识符")]),s._v("\n    DOMString               mid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果这个stats对象表示的RTCRtpTransceiver有一个不为空的中间值，这就是那个值，否则这个成员不存在")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\ndictionary RTCMediaHandlerStats "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RTCStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    DOMString               trackIdentifier"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 轨道的id属性")]),s._v("\n    boolean                 ended"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 反映轨道的结束状态")]),s._v("\n    required DOMString      kind"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// “音频”或“视频”。 这反映了MediaStreamTrack的kind属性")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\ndictionary RTCVideoHandlerStats "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RTCMediaHandlerStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\ndictionary RTCVideoSenderStats "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RTCVideoHandlerStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    DOMString               mediaSourceId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 媒体源ID")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\ndictionary RTCVideoReceiverStats "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RTCVideoHandlerStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\ndictionary RTCAudioHandlerStats "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RTCMediaHandlerStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\ndictionary RTCAudioSenderStats "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RTCAudioHandlerStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    DOMString               mediaSourceId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\ndictionary RTCDataChannelStats "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RTCStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    DOMString                    label"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// RTCDataChannel 对象的标签值")]),s._v("\n    DOMString                    rotocol"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// RTCDataChannel 对象的协议值")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("short")]),s._v("               dataChannelIdentifier"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// RTCDataChannel 对象的id属性")]),s._v("\n    required RTCDataChannelState state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// RTCDataChannel 对象的readyState值")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                messagesSent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 表示发送的 API“消息”事件总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("           bytesSent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 表示在此 RTCDataChannel 上发送的有效负载字节总数，即，不包括标头或填充")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                messagesReceived"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 表示收到的 API“消息”事件总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("           bytesReceived"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 表示在此RTCDataChannel上接收的总字节数，即不包括头或填充")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\ndictionary RTCTransportStats "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RTCStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// RTCTransportStats对象表示与RTCDtlsTransport及其底层RTCIceTransport对应的统计信息")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("           packetsSent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 表示通过此传输发送的数据包总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("           packetsReceived"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 表示在此传输上接收的数据包总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("           bytesSent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 表示在此RTCIceTransport上发送的有效载荷字节总数，")]),s._v("\n                                                            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 即不包括标头、填充或ICE连接检查。")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("           bytesReceived"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 表示在此RTCIceTransport上接收的有效载荷字节总数，")]),s._v("\n                                                            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 即不包括标头、填充或ICE 连接检查")]),s._v("\n    DOMString                    rtcpTransportStatsId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果RTP和RTCP未复用，则这是提供RTCP组件统计信息的传输ID，")]),s._v("\n                                                            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 并且此记录仅包含RTP组件统计信息")]),s._v("\n    RTCIceRole                   iceRole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ICE角色")]),s._v("\n    DOMString                    iceLocalUsernameFragment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置为此RTCIceTransport的消息验证程序中使用的本地用户名片段的当前值。")]),s._v("\n                                                            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 它可能会在 setLocalDescription()和ICE重启时更新。")]),s._v("\n    required RTCDtlsTransportState dtlsState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置为底层 RTCDtlsTransport的state属性的当前值。")]),s._v("\n    RTCIceTransportState          iceState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置为底层 RTCIceTransport 的 state 属性的当前值。")]),s._v("\n    DOMString                     selectedCandidatePairId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 它是与被检查的对象相关联的唯一标识符,")]),s._v("\n                                                            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 以生成与此传输相关联的RTCIceCandidatePairStats")]),s._v("\n    DOMString                     localCertificateId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 对于协商 DTLS 的组件，提供本地证书")]),s._v("\n    DOMString                     remoteCertificateId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 对于协商 DTLS 的组件，提供远程证书")]),s._v("\n    DOMString                     tlsVersion"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// TLS版本,仅在 DTLS 协商完成后才存在")]),s._v("\n    DOMString                     dtlsCipher"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 用于DTLS传输的密码套件的描述性名称,")]),s._v("\n                                                            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如IANA密码套件注册表[IANA-TLS-CIPHERS]的“描述”列中所定义")]),s._v("\n    DOMString                     srtpCipher"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 用于SRTP传输的保护配置文件的描述性名称")]),s._v("\n    DOMString                     tlsGroup"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// TSL组")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                 selectedCandidatePairChanges"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 此传输的选定候选对已更改的次数")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\ndictionary RTCSctpTransportStats "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RTCStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    DOMString                     transportId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 被检查以生成支持SCTP传输的DTLSTransport和ICETransport的  ")]),s._v("\n                                                            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// RTCTransportStats的对象的标识符")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("                        smoothedRoundTripTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 最新平滑的往返时间值")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                 congestionWindow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 最新的拥塞窗口")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                 receiverWindow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 最新的接收器窗口")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                 mtu"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 最新的最大传输单元")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                 unackData"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 未确认的DATA块的数量")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\n​\ndictionary RTCIceCandidateStats "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RTCStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    required DOMString           transportId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 传输标识")]),s._v("\n    DOMString"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("                   address"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 它是候选地址,允许使用IPv4地址、IPv6地址和完全限定域名")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                         port"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 候选人的端口号")]),s._v("\n    DOMString                    protocol"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 协议传输的有效值是“udp”和“tcp”之一")]),s._v("\n    required RTCIceCandidateType candidateType"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 候选人类型")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                         priority"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 优先级")]),s._v("\n    DOMString                    url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 对于本地候选人，这是从中获取候选人的ICE服务器的URL")]),s._v("\n    DOMString                    relayProtocol"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 它是端点用于与TURN服务器通信的协议。这仅适用于本地候选人。")]),s._v("\n                                                            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 有效值为“udp”、“tcp”或“tls")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\n​\ndictionary RTCIceCandidatePairStats "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RTCStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    required DOMString                      transportId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 传输标识")]),s._v("\n    required DOMString                      localCandidateId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 本地候选人ID")]),s._v("\n    required DOMString                      remoteCandidateId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 远端候选人状态")]),s._v("\n    required RTCStatsIceCandidatePairState  state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 代表一对本地和远程候选者的清单状态")]),s._v("\n    boolean                                 nominated"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 与更新部分中描述的提名标志相关")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                      packetsSent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在此候选对上发送的数据包总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                      packetsReceived"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在此候选对上接收到的数据包总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                      bytesSent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 此候选对上发送的有效载荷字节总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                      bytesReceived"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在此候选对上接收的有效载荷字节总数")]),s._v("\n    DOMHighResTimeStamp                     lastPacketSentTimestamp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在此特定候选对上发送最后一个数据包的时间戳，不包括STUN数据包")]),s._v("\n    DOMHighResTimeStamp                     lastPacketReceivedTimestamp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在此特定候选对上接收到最后一个数据包的时间戳,不包括 STUN 数据包")]),s._v("\n    DOMHighResTimeStamp                     firstRequestTimestamp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在此特定候选对上发送第一个STUN请求的时间戳")]),s._v("\n    DOMHighResTimeStamp                     lastRequestTimestamp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在此特定候选对上发送最后一个STUN请求的时间戳  (lastRequestTimestamp - firstRequestTimestamp) / requestsSent")]),s._v("\n    DOMHighResTimeStamp                     lastResponseTimestamp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 此特定候选对上收到最后一个STUN响应的时间戳")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("                                  totalRoundTripTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 自会话开始以来所有往返时间测量的总和（以秒为单位）")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("                                  currentRoundTripTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 以秒为单位的最新往返时间，由两个STUN连接检查[STUN-PATH-CHAR]计算得出")]),s._v("\n     "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("                                 availableOutgoingBitrate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 可用传出比特率-由底层拥塞控制通过使用此候选对组合所有传出 RTP 流的可用比特率来计算的。 ")]),s._v("\n                                                                            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 比特率测量不计算 IP 或其他传输层（如 TCP 或 UDP）的大小")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("                                  availableIncomingBitrate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 可用输入比特率-由底层拥塞控制通过使用此候选对组合所有传入 RTP 流的可用比特率来计算的。 ")]),s._v("\n                                                                            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 比特率测量不计算 IP 或其他传输层（如 TCP 或 UDP）的大小")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                           circuitBreakerTriggerCount"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 触发断路器的次数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                      requestsReceived"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 收到的连接检查请求总数（包括重传）")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                      requestsSent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 发送的连接检查请求总数（不包括重传）")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                      responsesReceived"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 收到的连接检查响应总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                      responsesSent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 发送的连接检查响应总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                      retransmissionsReceived"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 收到的连接检查请求重传总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                      retransmissionsSent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 发送的连接检查请求重传总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                      consentRequestsSent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 发送的同意请求总数")]),s._v("\n    DOMHighResTimeStamp                     consentExpiredTimestamp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 最新的有效STUN绑定响应过期的时间戳")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                           packetsDiscardedOnSend"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 由于套接字错误而被丢弃的此候选对的数据包总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                      bytesDiscardedOnSend"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 由于套接字错误而被丢弃的此候选对的总字节数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                      requestBytesSent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 为连通性检查发送的总字节数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                      consentRequestBytesSent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 为同意请求发送的总字节数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                      responseBytesSent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 为连通性检查响应发送的总字节数")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RTCStatsIceCandidatePairState")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"frozen"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"waiting"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"in-progress"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"failed"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"succeeded"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\n​\ndictionary RTCCertificateStats "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RTCStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    required DOMString                      fingerprint"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 证书的指纹")]),s._v("\n    required DOMString                      fingerprintAlgorithm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 用于计算证书指纹的哈希函数")]),s._v("\n    required DOMString                      base64Certificate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 证书的DER编码的base-64")]),s._v("\n    DOMString                               issuerCertificateId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 包含证书链中下一个证书的stats对象")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\ndictionary RTCIceServerStats "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RTCStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    required DOMString                      url"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ICE服务器的URL")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                                    port"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 客户端使用的端口号")]),s._v("\n    DOMString                               relayProtocol"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 端点用于与ICE服务器通信的协议")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                           totalRequestsSent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 已发送到此服务器的请求总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                           totalResponsesReceived"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 从该服务器收到的响应总数")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("                                  totalRoundTripTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在收到响应的情况下已发送的所有请求的 RTT 总和")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  \n​\ndictionary RTCMediaStreamStats "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RTCStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 由于发送方、接收方和收发器统计对象更适合描述现代 RTCPeerConnection 模型（统一计划）")]),s._v("\n                                                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 因此整个字典已于 2019 年 9 月过时。")]),s._v("\n    DOMString                               streamIdentifier"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// stream.id 属性")]),s._v("\n    sequence"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("DOMString"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("                     trackIds"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// stats 对象的id,并不是TrackID")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\ndictionary RTCSenderVideoTrackAttachmentStats "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RTCVideoSenderStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\ndictionary RTCSenderAudioTrackAttachmentStats "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RTCAudioSenderStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\ndictionary RTCReceiverVideoTrackAttachmentStats "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RTCVideoReceiverStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\ndictionary RTCReceiverAudioTrackAttachmentStats "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RTCAudioReceiverStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            \npartial dictionary RTCCodecStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("      \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 已于 2019 年 8 月移RTCInboundRtpStreamStats.RTCInboundRtpStreamStats/decoderImplementation}} ")]),s._v("\n    DOMString       implementation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//  和 RTCOutboundRtpStreamStats.encoderImplementation    ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\npartial dictionary RTCIceCandidateStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    boolean         deleted "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 此字段已过时，因为如果删除 ICE 候选对象，它将不再出现在 getStats() 中")]),s._v("\n    boolean         isRemote"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false 表示这代表本地候选人； true 表示这代表远程候选人")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\npartial dictionary RTCIceCandidatePairStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("             totalRtt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 该字段在 2016 年 12 月更名为 totalRoundTripTime")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("             currentRtt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 该字段于 2016 年 12 月更名为 currentRoundTripTime")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" priority"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 该字段在2018年2月被删除，因为它不能用 53 位表示。如果需要，可以按照 [RFC5245] 第 5.7.2 节中的定义重新计算")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\npartial dictionary RTCRtpStreamStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    DOMString          mediaType"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 表示接收轨道的 stats 对象的标识符RTCReceiverAudioTrackAttachmentStats 或 ")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// RTCReceiverVideoTrackAttachmentStats,该字段于 2020 年 4 月被淘汰")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("             averageRTCPInterval"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\n​\npartial dictionary RTCOutboundRtpStreamStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    DOMString          trackId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// stats 对象的标识符")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\npartial dictionary RTCMediaHandlerStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    RTCPriorityType    priority"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 表示已为曲目设置的优先级")]),s._v("\n    boolean            remoteSource"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果轨道附件在 RTCRtpSender 上，则为 false，")]),s._v("\n                                                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果轨道附件在 RTCRtpReceiver 上，则为 true,2020 年 4 月过时")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\npartial dictionary RTCAudioHandlerStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("      audioLevel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 已于 2019 年 6 月移至 RTCAudioReceiverStats 和 RTCAudioSourceStats")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("      totalAudioEnergy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 已于 2019 年 6 月移至 RTCAudioReceiverStats 和 RTCAudioSourceStats")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("      totalSamplesDuration"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 已于 2019 年 6 月移至 RTCAudioReceiverStats 和 RTCAudioSourceStats")]),s._v("\n    boolean     voiceActivityFlag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 该字段已于 2019 年 8 月移至 RTCOutboundRtpStreamStats 和 RTCInboundRtpStreamStats")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\npartial dictionary RTCAudioSenderStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                      totalSamplesSent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这已于 2019 年 8 月移至 RTCOutboundRtpStreamStats")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("                                  echoReturnLoss"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这已于 2019 年 8 月移至 RTCAudioSourceStats")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("                                  echoReturnLossEnhancement"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这已于 2019 年 8 月移至 RTCAudioSourceStats")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        \npartial dictionary RTCAudioReceiverStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("                                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 已于 2019 年 8 月移至 RTCInboundRtpStreamStats")]),s._v("\n    DOMHighResTimeStamp                     estimatedPlayoutTimestamp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("                                  jitterBufferDelay"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                      jitterBufferEmittedCount"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                      totalSamplesReceived"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                      concealedSamples"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                      silentConcealedSamples"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                      concealmentEvents"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                      insertedSamplesForDeceleration"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("                      removedSamplesForAcceleration"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("                                  audioLevel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("                                  totalAudioEnergy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("                                  totalSamplesDuration"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\npartial dictionary RTCVideoHandlerStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       frameWidth"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 已于 2019 年 8 月移至 RTCOutboundRtpStreamStats 和 RTCInboundRtpStreamStats")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       frameHeight"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 已于 2019 年 8 月移至 RTCOutboundRtpStreamStats 和 RTCInboundRtpStreamStats")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("              ramesPerSecond"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2019 年 5 月被 RTCVideoSourceStats.framesPerSecond 取代，代表轨道的帧速率")]),s._v("\n                                        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2019 年 8 月移至 RTCInboundRtpStreamStats，表示解码帧速率")]),s._v("\n                                        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2019年8月，RTCOutboundRtpStreamStats中还增加了framesPerSecond，代表编码帧率（可能低于源帧率）")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\npartial dictionary RTCVideoSenderStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       keyFramesSent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2019 年 6 月被 RTCOutboundRtpStreamStats 中的 keyFramesEncoded 替换")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       framesCaptured"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2019 年 5 月被 RTCVideoSourceStats.frames 取代")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       framesSent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2019 年 8 月移至 RTCOutboundRtpStreamStats")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       hugeFramesSent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2019 年 8 月移至 RTCOutboundRtpStreamStats")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n​\npartial dictionary RTCVideoReceiverStats "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       keyFramesReceived"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2019 年 6 月被 RTCInboundRtpStreamStats 中的 keyFramesDecoded 替换")]),s._v("\n    DOMHighResTimeStamp estimatedPlayoutTimestamp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2019 年 8 月移至 RTCInboundRtpStreamStats")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("              jitterBufferDelay"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2019 年 8 月移至 RTCInboundRtpStreamStats")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("  jitterBufferEmittedCount"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2019 年 8 月移至 RTCInboundRtpStreamStats")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       framesReceived"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2019 年 8 月移至 RTCInboundRtpStreamStats")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       framesDecoded"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2019 年 8 月移至 RTCInboundRtpStreamStats")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       framesDropped"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2019 年 8 月移至 RTCInboundRtpStreamStats")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       partialFramesLost"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2019 年 8 月移至 RTCInboundRtpStreamStats")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("       fullFramesLost"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2019 年 8 月移至 RTCInboundRtpStreamStats")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br"),n("span",{staticClass:"line-number"},[s._v("83")]),n("br"),n("span",{staticClass:"line-number"},[s._v("84")]),n("br"),n("span",{staticClass:"line-number"},[s._v("85")]),n("br"),n("span",{staticClass:"line-number"},[s._v("86")]),n("br"),n("span",{staticClass:"line-number"},[s._v("87")]),n("br"),n("span",{staticClass:"line-number"},[s._v("88")]),n("br"),n("span",{staticClass:"line-number"},[s._v("89")]),n("br"),n("span",{staticClass:"line-number"},[s._v("90")]),n("br"),n("span",{staticClass:"line-number"},[s._v("91")]),n("br"),n("span",{staticClass:"line-number"},[s._v("92")]),n("br"),n("span",{staticClass:"line-number"},[s._v("93")]),n("br"),n("span",{staticClass:"line-number"},[s._v("94")]),n("br"),n("span",{staticClass:"line-number"},[s._v("95")]),n("br"),n("span",{staticClass:"line-number"},[s._v("96")]),n("br"),n("span",{staticClass:"line-number"},[s._v("97")]),n("br"),n("span",{staticClass:"line-number"},[s._v("98")]),n("br"),n("span",{staticClass:"line-number"},[s._v("99")]),n("br"),n("span",{staticClass:"line-number"},[s._v("100")]),n("br"),n("span",{staticClass:"line-number"},[s._v("101")]),n("br"),n("span",{staticClass:"line-number"},[s._v("102")]),n("br"),n("span",{staticClass:"line-number"},[s._v("103")]),n("br"),n("span",{staticClass:"line-number"},[s._v("104")]),n("br"),n("span",{staticClass:"line-number"},[s._v("105")]),n("br"),n("span",{staticClass:"line-number"},[s._v("106")]),n("br"),n("span",{staticClass:"line-number"},[s._v("107")]),n("br"),n("span",{staticClass:"line-number"},[s._v("108")]),n("br"),n("span",{staticClass:"line-number"},[s._v("109")]),n("br"),n("span",{staticClass:"line-number"},[s._v("110")]),n("br"),n("span",{staticClass:"line-number"},[s._v("111")]),n("br"),n("span",{staticClass:"line-number"},[s._v("112")]),n("br"),n("span",{staticClass:"line-number"},[s._v("113")]),n("br"),n("span",{staticClass:"line-number"},[s._v("114")]),n("br"),n("span",{staticClass:"line-number"},[s._v("115")]),n("br"),n("span",{staticClass:"line-number"},[s._v("116")]),n("br"),n("span",{staticClass:"line-number"},[s._v("117")]),n("br"),n("span",{staticClass:"line-number"},[s._v("118")]),n("br"),n("span",{staticClass:"line-number"},[s._v("119")]),n("br"),n("span",{staticClass:"line-number"},[s._v("120")]),n("br"),n("span",{staticClass:"line-number"},[s._v("121")]),n("br"),n("span",{staticClass:"line-number"},[s._v("122")]),n("br"),n("span",{staticClass:"line-number"},[s._v("123")]),n("br"),n("span",{staticClass:"line-number"},[s._v("124")]),n("br"),n("span",{staticClass:"line-number"},[s._v("125")]),n("br"),n("span",{staticClass:"line-number"},[s._v("126")]),n("br"),n("span",{staticClass:"line-number"},[s._v("127")]),n("br"),n("span",{staticClass:"line-number"},[s._v("128")]),n("br"),n("span",{staticClass:"line-number"},[s._v("129")]),n("br"),n("span",{staticClass:"line-number"},[s._v("130")]),n("br"),n("span",{staticClass:"line-number"},[s._v("131")]),n("br"),n("span",{staticClass:"line-number"},[s._v("132")]),n("br"),n("span",{staticClass:"line-number"},[s._v("133")]),n("br"),n("span",{staticClass:"line-number"},[s._v("134")]),n("br"),n("span",{staticClass:"line-number"},[s._v("135")]),n("br"),n("span",{staticClass:"line-number"},[s._v("136")]),n("br"),n("span",{staticClass:"line-number"},[s._v("137")]),n("br"),n("span",{staticClass:"line-number"},[s._v("138")]),n("br"),n("span",{staticClass:"line-number"},[s._v("139")]),n("br"),n("span",{staticClass:"line-number"},[s._v("140")]),n("br"),n("span",{staticClass:"line-number"},[s._v("141")]),n("br"),n("span",{staticClass:"line-number"},[s._v("142")]),n("br"),n("span",{staticClass:"line-number"},[s._v("143")]),n("br"),n("span",{staticClass:"line-number"},[s._v("144")]),n("br"),n("span",{staticClass:"line-number"},[s._v("145")]),n("br"),n("span",{staticClass:"line-number"},[s._v("146")]),n("br"),n("span",{staticClass:"line-number"},[s._v("147")]),n("br"),n("span",{staticClass:"line-number"},[s._v("148")]),n("br"),n("span",{staticClass:"line-number"},[s._v("149")]),n("br"),n("span",{staticClass:"line-number"},[s._v("150")]),n("br"),n("span",{staticClass:"line-number"},[s._v("151")]),n("br"),n("span",{staticClass:"line-number"},[s._v("152")]),n("br"),n("span",{staticClass:"line-number"},[s._v("153")]),n("br"),n("span",{staticClass:"line-number"},[s._v("154")]),n("br"),n("span",{staticClass:"line-number"},[s._v("155")]),n("br"),n("span",{staticClass:"line-number"},[s._v("156")]),n("br"),n("span",{staticClass:"line-number"},[s._v("157")]),n("br"),n("span",{staticClass:"line-number"},[s._v("158")]),n("br"),n("span",{staticClass:"line-number"},[s._v("159")]),n("br"),n("span",{staticClass:"line-number"},[s._v("160")]),n("br"),n("span",{staticClass:"line-number"},[s._v("161")]),n("br"),n("span",{staticClass:"line-number"},[s._v("162")]),n("br"),n("span",{staticClass:"line-number"},[s._v("163")]),n("br"),n("span",{staticClass:"line-number"},[s._v("164")]),n("br"),n("span",{staticClass:"line-number"},[s._v("165")]),n("br"),n("span",{staticClass:"line-number"},[s._v("166")]),n("br"),n("span",{staticClass:"line-number"},[s._v("167")]),n("br"),n("span",{staticClass:"line-number"},[s._v("168")]),n("br"),n("span",{staticClass:"line-number"},[s._v("169")]),n("br"),n("span",{staticClass:"line-number"},[s._v("170")]),n("br"),n("span",{staticClass:"line-number"},[s._v("171")]),n("br"),n("span",{staticClass:"line-number"},[s._v("172")]),n("br"),n("span",{staticClass:"line-number"},[s._v("173")]),n("br"),n("span",{staticClass:"line-number"},[s._v("174")]),n("br"),n("span",{staticClass:"line-number"},[s._v("175")]),n("br"),n("span",{staticClass:"line-number"},[s._v("176")]),n("br"),n("span",{staticClass:"line-number"},[s._v("177")]),n("br"),n("span",{staticClass:"line-number"},[s._v("178")]),n("br"),n("span",{staticClass:"line-number"},[s._v("179")]),n("br"),n("span",{staticClass:"line-number"},[s._v("180")]),n("br"),n("span",{staticClass:"line-number"},[s._v("181")]),n("br"),n("span",{staticClass:"line-number"},[s._v("182")]),n("br"),n("span",{staticClass:"line-number"},[s._v("183")]),n("br"),n("span",{staticClass:"line-number"},[s._v("184")]),n("br"),n("span",{staticClass:"line-number"},[s._v("185")]),n("br"),n("span",{staticClass:"line-number"},[s._v("186")]),n("br"),n("span",{staticClass:"line-number"},[s._v("187")]),n("br"),n("span",{staticClass:"line-number"},[s._v("188")]),n("br"),n("span",{staticClass:"line-number"},[s._v("189")]),n("br"),n("span",{staticClass:"line-number"},[s._v("190")]),n("br"),n("span",{staticClass:"line-number"},[s._v("191")]),n("br"),n("span",{staticClass:"line-number"},[s._v("192")]),n("br"),n("span",{staticClass:"line-number"},[s._v("193")]),n("br"),n("span",{staticClass:"line-number"},[s._v("194")]),n("br"),n("span",{staticClass:"line-number"},[s._v("195")]),n("br"),n("span",{staticClass:"line-number"},[s._v("196")]),n("br"),n("span",{staticClass:"line-number"},[s._v("197")]),n("br"),n("span",{staticClass:"line-number"},[s._v("198")]),n("br"),n("span",{staticClass:"line-number"},[s._v("199")]),n("br"),n("span",{staticClass:"line-number"},[s._v("200")]),n("br"),n("span",{staticClass:"line-number"},[s._v("201")]),n("br"),n("span",{staticClass:"line-number"},[s._v("202")]),n("br"),n("span",{staticClass:"line-number"},[s._v("203")]),n("br"),n("span",{staticClass:"line-number"},[s._v("204")]),n("br"),n("span",{staticClass:"line-number"},[s._v("205")]),n("br"),n("span",{staticClass:"line-number"},[s._v("206")]),n("br"),n("span",{staticClass:"line-number"},[s._v("207")]),n("br"),n("span",{staticClass:"line-number"},[s._v("208")]),n("br"),n("span",{staticClass:"line-number"},[s._v("209")]),n("br"),n("span",{staticClass:"line-number"},[s._v("210")]),n("br"),n("span",{staticClass:"line-number"},[s._v("211")]),n("br"),n("span",{staticClass:"line-number"},[s._v("212")]),n("br"),n("span",{staticClass:"line-number"},[s._v("213")]),n("br"),n("span",{staticClass:"line-number"},[s._v("214")]),n("br"),n("span",{staticClass:"line-number"},[s._v("215")]),n("br"),n("span",{staticClass:"line-number"},[s._v("216")]),n("br"),n("span",{staticClass:"line-number"},[s._v("217")]),n("br"),n("span",{staticClass:"line-number"},[s._v("218")]),n("br"),n("span",{staticClass:"line-number"},[s._v("219")]),n("br"),n("span",{staticClass:"line-number"},[s._v("220")]),n("br"),n("span",{staticClass:"line-number"},[s._v("221")]),n("br"),n("span",{staticClass:"line-number"},[s._v("222")]),n("br"),n("span",{staticClass:"line-number"},[s._v("223")]),n("br"),n("span",{staticClass:"line-number"},[s._v("224")]),n("br"),n("span",{staticClass:"line-number"},[s._v("225")]),n("br"),n("span",{staticClass:"line-number"},[s._v("226")]),n("br"),n("span",{staticClass:"line-number"},[s._v("227")]),n("br"),n("span",{staticClass:"line-number"},[s._v("228")]),n("br"),n("span",{staticClass:"line-number"},[s._v("229")]),n("br"),n("span",{staticClass:"line-number"},[s._v("230")]),n("br"),n("span",{staticClass:"line-number"},[s._v("231")]),n("br"),n("span",{staticClass:"line-number"},[s._v("232")]),n("br"),n("span",{staticClass:"line-number"},[s._v("233")]),n("br"),n("span",{staticClass:"line-number"},[s._v("234")]),n("br"),n("span",{staticClass:"line-number"},[s._v("235")]),n("br"),n("span",{staticClass:"line-number"},[s._v("236")]),n("br"),n("span",{staticClass:"line-number"},[s._v("237")]),n("br"),n("span",{staticClass:"line-number"},[s._v("238")]),n("br"),n("span",{staticClass:"line-number"},[s._v("239")]),n("br"),n("span",{staticClass:"line-number"},[s._v("240")]),n("br"),n("span",{staticClass:"line-number"},[s._v("241")]),n("br"),n("span",{staticClass:"line-number"},[s._v("242")]),n("br"),n("span",{staticClass:"line-number"},[s._v("243")]),n("br"),n("span",{staticClass:"line-number"},[s._v("244")]),n("br"),n("span",{staticClass:"line-number"},[s._v("245")]),n("br"),n("span",{staticClass:"line-number"},[s._v("246")]),n("br"),n("span",{staticClass:"line-number"},[s._v("247")]),n("br"),n("span",{staticClass:"line-number"},[s._v("248")]),n("br"),n("span",{staticClass:"line-number"},[s._v("249")]),n("br"),n("span",{staticClass:"line-number"},[s._v("250")]),n("br"),n("span",{staticClass:"line-number"},[s._v("251")]),n("br"),n("span",{staticClass:"line-number"},[s._v("252")]),n("br"),n("span",{staticClass:"line-number"},[s._v("253")]),n("br"),n("span",{staticClass:"line-number"},[s._v("254")]),n("br"),n("span",{staticClass:"line-number"},[s._v("255")]),n("br"),n("span",{staticClass:"line-number"},[s._v("256")]),n("br"),n("span",{staticClass:"line-number"},[s._v("257")]),n("br"),n("span",{staticClass:"line-number"},[s._v("258")]),n("br"),n("span",{staticClass:"line-number"},[s._v("259")]),n("br"),n("span",{staticClass:"line-number"},[s._v("260")]),n("br"),n("span",{staticClass:"line-number"},[s._v("261")]),n("br"),n("span",{staticClass:"line-number"},[s._v("262")]),n("br"),n("span",{staticClass:"line-number"},[s._v("263")]),n("br"),n("span",{staticClass:"line-number"},[s._v("264")]),n("br"),n("span",{staticClass:"line-number"},[s._v("265")]),n("br"),n("span",{staticClass:"line-number"},[s._v("266")]),n("br"),n("span",{staticClass:"line-number"},[s._v("267")]),n("br"),n("span",{staticClass:"line-number"},[s._v("268")]),n("br"),n("span",{staticClass:"line-number"},[s._v("269")]),n("br"),n("span",{staticClass:"line-number"},[s._v("270")]),n("br"),n("span",{staticClass:"line-number"},[s._v("271")]),n("br"),n("span",{staticClass:"line-number"},[s._v("272")]),n("br"),n("span",{staticClass:"line-number"},[s._v("273")]),n("br"),n("span",{staticClass:"line-number"},[s._v("274")]),n("br"),n("span",{staticClass:"line-number"},[s._v("275")]),n("br"),n("span",{staticClass:"line-number"},[s._v("276")]),n("br"),n("span",{staticClass:"line-number"},[s._v("277")]),n("br"),n("span",{staticClass:"line-number"},[s._v("278")]),n("br"),n("span",{staticClass:"line-number"},[s._v("279")]),n("br"),n("span",{staticClass:"line-number"},[s._v("280")]),n("br"),n("span",{staticClass:"line-number"},[s._v("281")]),n("br"),n("span",{staticClass:"line-number"},[s._v("282")]),n("br"),n("span",{staticClass:"line-number"},[s._v("283")]),n("br"),n("span",{staticClass:"line-number"},[s._v("284")]),n("br"),n("span",{staticClass:"line-number"},[s._v("285")]),n("br"),n("span",{staticClass:"line-number"},[s._v("286")]),n("br"),n("span",{staticClass:"line-number"},[s._v("287")]),n("br"),n("span",{staticClass:"line-number"},[s._v("288")]),n("br"),n("span",{staticClass:"line-number"},[s._v("289")]),n("br"),n("span",{staticClass:"line-number"},[s._v("290")]),n("br"),n("span",{staticClass:"line-number"},[s._v("291")]),n("br"),n("span",{staticClass:"line-number"},[s._v("292")]),n("br"),n("span",{staticClass:"line-number"},[s._v("293")]),n("br"),n("span",{staticClass:"line-number"},[s._v("294")]),n("br"),n("span",{staticClass:"line-number"},[s._v("295")]),n("br"),n("span",{staticClass:"line-number"},[s._v("296")]),n("br"),n("span",{staticClass:"line-number"},[s._v("297")]),n("br"),n("span",{staticClass:"line-number"},[s._v("298")]),n("br"),n("span",{staticClass:"line-number"},[s._v("299")]),n("br"),n("span",{staticClass:"line-number"},[s._v("300")]),n("br"),n("span",{staticClass:"line-number"},[s._v("301")]),n("br"),n("span",{staticClass:"line-number"},[s._v("302")]),n("br"),n("span",{staticClass:"line-number"},[s._v("303")]),n("br"),n("span",{staticClass:"line-number"},[s._v("304")]),n("br"),n("span",{staticClass:"line-number"},[s._v("305")]),n("br"),n("span",{staticClass:"line-number"},[s._v("306")]),n("br"),n("span",{staticClass:"line-number"},[s._v("307")]),n("br"),n("span",{staticClass:"line-number"},[s._v("308")]),n("br"),n("span",{staticClass:"line-number"},[s._v("309")]),n("br"),n("span",{staticClass:"line-number"},[s._v("310")]),n("br"),n("span",{staticClass:"line-number"},[s._v("311")]),n("br"),n("span",{staticClass:"line-number"},[s._v("312")]),n("br"),n("span",{staticClass:"line-number"},[s._v("313")]),n("br"),n("span",{staticClass:"line-number"},[s._v("314")]),n("br"),n("span",{staticClass:"line-number"},[s._v("315")]),n("br"),n("span",{staticClass:"line-number"},[s._v("316")]),n("br"),n("span",{staticClass:"line-number"},[s._v("317")]),n("br"),n("span",{staticClass:"line-number"},[s._v("318")]),n("br"),n("span",{staticClass:"line-number"},[s._v("319")]),n("br"),n("span",{staticClass:"line-number"},[s._v("320")]),n("br"),n("span",{staticClass:"line-number"},[s._v("321")]),n("br"),n("span",{staticClass:"line-number"},[s._v("322")]),n("br"),n("span",{staticClass:"line-number"},[s._v("323")]),n("br"),n("span",{staticClass:"line-number"},[s._v("324")]),n("br"),n("span",{staticClass:"line-number"},[s._v("325")]),n("br"),n("span",{staticClass:"line-number"},[s._v("326")]),n("br"),n("span",{staticClass:"line-number"},[s._v("327")]),n("br"),n("span",{staticClass:"line-number"},[s._v("328")]),n("br"),n("span",{staticClass:"line-number"},[s._v("329")]),n("br"),n("span",{staticClass:"line-number"},[s._v("330")]),n("br"),n("span",{staticClass:"line-number"},[s._v("331")]),n("br"),n("span",{staticClass:"line-number"},[s._v("332")]),n("br"),n("span",{staticClass:"line-number"},[s._v("333")]),n("br"),n("span",{staticClass:"line-number"},[s._v("334")]),n("br"),n("span",{staticClass:"line-number"},[s._v("335")]),n("br"),n("span",{staticClass:"line-number"},[s._v("336")]),n("br"),n("span",{staticClass:"line-number"},[s._v("337")]),n("br"),n("span",{staticClass:"line-number"},[s._v("338")]),n("br"),n("span",{staticClass:"line-number"},[s._v("339")]),n("br"),n("span",{staticClass:"line-number"},[s._v("340")]),n("br"),n("span",{staticClass:"line-number"},[s._v("341")]),n("br"),n("span",{staticClass:"line-number"},[s._v("342")]),n("br"),n("span",{staticClass:"line-number"},[s._v("343")]),n("br"),n("span",{staticClass:"line-number"},[s._v("344")]),n("br"),n("span",{staticClass:"line-number"},[s._v("345")]),n("br"),n("span",{staticClass:"line-number"},[s._v("346")]),n("br"),n("span",{staticClass:"line-number"},[s._v("347")]),n("br"),n("span",{staticClass:"line-number"},[s._v("348")]),n("br"),n("span",{staticClass:"line-number"},[s._v("349")]),n("br"),n("span",{staticClass:"line-number"},[s._v("350")]),n("br"),n("span",{staticClass:"line-number"},[s._v("351")]),n("br"),n("span",{staticClass:"line-number"},[s._v("352")]),n("br"),n("span",{staticClass:"line-number"},[s._v("353")]),n("br"),n("span",{staticClass:"line-number"},[s._v("354")]),n("br"),n("span",{staticClass:"line-number"},[s._v("355")]),n("br"),n("span",{staticClass:"line-number"},[s._v("356")]),n("br"),n("span",{staticClass:"line-number"},[s._v("357")]),n("br"),n("span",{staticClass:"line-number"},[s._v("358")]),n("br"),n("span",{staticClass:"line-number"},[s._v("359")]),n("br"),n("span",{staticClass:"line-number"},[s._v("360")]),n("br"),n("span",{staticClass:"line-number"},[s._v("361")]),n("br"),n("span",{staticClass:"line-number"},[s._v("362")]),n("br"),n("span",{staticClass:"line-number"},[s._v("363")]),n("br"),n("span",{staticClass:"line-number"},[s._v("364")]),n("br"),n("span",{staticClass:"line-number"},[s._v("365")]),n("br"),n("span",{staticClass:"line-number"},[s._v("366")]),n("br"),n("span",{staticClass:"line-number"},[s._v("367")]),n("br"),n("span",{staticClass:"line-number"},[s._v("368")]),n("br"),n("span",{staticClass:"line-number"},[s._v("369")]),n("br"),n("span",{staticClass:"line-number"},[s._v("370")]),n("br"),n("span",{staticClass:"line-number"},[s._v("371")]),n("br"),n("span",{staticClass:"line-number"},[s._v("372")]),n("br"),n("span",{staticClass:"line-number"},[s._v("373")]),n("br"),n("span",{staticClass:"line-number"},[s._v("374")]),n("br"),n("span",{staticClass:"line-number"},[s._v("375")]),n("br"),n("span",{staticClass:"line-number"},[s._v("376")]),n("br"),n("span",{staticClass:"line-number"},[s._v("377")]),n("br"),n("span",{staticClass:"line-number"},[s._v("378")]),n("br"),n("span",{staticClass:"line-number"},[s._v("379")]),n("br"),n("span",{staticClass:"line-number"},[s._v("380")]),n("br"),n("span",{staticClass:"line-number"},[s._v("381")]),n("br"),n("span",{staticClass:"line-number"},[s._v("382")]),n("br"),n("span",{staticClass:"line-number"},[s._v("383")]),n("br"),n("span",{staticClass:"line-number"},[s._v("384")]),n("br"),n("span",{staticClass:"line-number"},[s._v("385")]),n("br"),n("span",{staticClass:"line-number"},[s._v("386")]),n("br"),n("span",{staticClass:"line-number"},[s._v("387")]),n("br"),n("span",{staticClass:"line-number"},[s._v("388")]),n("br"),n("span",{staticClass:"line-number"},[s._v("389")]),n("br"),n("span",{staticClass:"line-number"},[s._v("390")]),n("br"),n("span",{staticClass:"line-number"},[s._v("391")]),n("br"),n("span",{staticClass:"line-number"},[s._v("392")]),n("br"),n("span",{staticClass:"line-number"},[s._v("393")]),n("br"),n("span",{staticClass:"line-number"},[s._v("394")]),n("br"),n("span",{staticClass:"line-number"},[s._v("395")]),n("br"),n("span",{staticClass:"line-number"},[s._v("396")]),n("br"),n("span",{staticClass:"line-number"},[s._v("397")]),n("br"),n("span",{staticClass:"line-number"},[s._v("398")]),n("br"),n("span",{staticClass:"line-number"},[s._v("399")]),n("br"),n("span",{staticClass:"line-number"},[s._v("400")]),n("br"),n("span",{staticClass:"line-number"},[s._v("401")]),n("br"),n("span",{staticClass:"line-number"},[s._v("402")]),n("br"),n("span",{staticClass:"line-number"},[s._v("403")]),n("br"),n("span",{staticClass:"line-number"},[s._v("404")]),n("br"),n("span",{staticClass:"line-number"},[s._v("405")]),n("br"),n("span",{staticClass:"line-number"},[s._v("406")]),n("br"),n("span",{staticClass:"line-number"},[s._v("407")]),n("br"),n("span",{staticClass:"line-number"},[s._v("408")]),n("br"),n("span",{staticClass:"line-number"},[s._v("409")]),n("br"),n("span",{staticClass:"line-number"},[s._v("410")]),n("br"),n("span",{staticClass:"line-number"},[s._v("411")]),n("br"),n("span",{staticClass:"line-number"},[s._v("412")]),n("br"),n("span",{staticClass:"line-number"},[s._v("413")]),n("br"),n("span",{staticClass:"line-number"},[s._v("414")]),n("br"),n("span",{staticClass:"line-number"},[s._v("415")]),n("br"),n("span",{staticClass:"line-number"},[s._v("416")]),n("br"),n("span",{staticClass:"line-number"},[s._v("417")]),n("br"),n("span",{staticClass:"line-number"},[s._v("418")]),n("br"),n("span",{staticClass:"line-number"},[s._v("419")]),n("br"),n("span",{staticClass:"line-number"},[s._v("420")]),n("br"),n("span",{staticClass:"line-number"},[s._v("421")]),n("br"),n("span",{staticClass:"line-number"},[s._v("422")]),n("br"),n("span",{staticClass:"line-number"},[s._v("423")]),n("br"),n("span",{staticClass:"line-number"},[s._v("424")]),n("br"),n("span",{staticClass:"line-number"},[s._v("425")]),n("br"),n("span",{staticClass:"line-number"},[s._v("426")]),n("br"),n("span",{staticClass:"line-number"},[s._v("427")]),n("br"),n("span",{staticClass:"line-number"},[s._v("428")]),n("br"),n("span",{staticClass:"line-number"},[s._v("429")]),n("br"),n("span",{staticClass:"line-number"},[s._v("430")]),n("br"),n("span",{staticClass:"line-number"},[s._v("431")]),n("br"),n("span",{staticClass:"line-number"},[s._v("432")]),n("br"),n("span",{staticClass:"line-number"},[s._v("433")]),n("br"),n("span",{staticClass:"line-number"},[s._v("434")]),n("br"),n("span",{staticClass:"line-number"},[s._v("435")]),n("br"),n("span",{staticClass:"line-number"},[s._v("436")]),n("br"),n("span",{staticClass:"line-number"},[s._v("437")]),n("br"),n("span",{staticClass:"line-number"},[s._v("438")]),n("br"),n("span",{staticClass:"line-number"},[s._v("439")]),n("br"),n("span",{staticClass:"line-number"},[s._v("440")]),n("br"),n("span",{staticClass:"line-number"},[s._v("441")]),n("br"),n("span",{staticClass:"line-number"},[s._v("442")]),n("br"),n("span",{staticClass:"line-number"},[s._v("443")]),n("br"),n("span",{staticClass:"line-number"},[s._v("444")]),n("br"),n("span",{staticClass:"line-number"},[s._v("445")]),n("br"),n("span",{staticClass:"line-number"},[s._v("446")]),n("br"),n("span",{staticClass:"line-number"},[s._v("447")]),n("br"),n("span",{staticClass:"line-number"},[s._v("448")]),n("br"),n("span",{staticClass:"line-number"},[s._v("449")]),n("br"),n("span",{staticClass:"line-number"},[s._v("450")]),n("br"),n("span",{staticClass:"line-number"},[s._v("451")]),n("br"),n("span",{staticClass:"line-number"},[s._v("452")]),n("br"),n("span",{staticClass:"line-number"},[s._v("453")]),n("br"),n("span",{staticClass:"line-number"},[s._v("454")]),n("br"),n("span",{staticClass:"line-number"},[s._v("455")]),n("br"),n("span",{staticClass:"line-number"},[s._v("456")]),n("br"),n("span",{staticClass:"line-number"},[s._v("457")]),n("br"),n("span",{staticClass:"line-number"},[s._v("458")]),n("br"),n("span",{staticClass:"line-number"},[s._v("459")]),n("br"),n("span",{staticClass:"line-number"},[s._v("460")]),n("br"),n("span",{staticClass:"line-number"},[s._v("461")]),n("br"),n("span",{staticClass:"line-number"},[s._v("462")]),n("br"),n("span",{staticClass:"line-number"},[s._v("463")]),n("br"),n("span",{staticClass:"line-number"},[s._v("464")]),n("br"),n("span",{staticClass:"line-number"},[s._v("465")]),n("br"),n("span",{staticClass:"line-number"},[s._v("466")]),n("br"),n("span",{staticClass:"line-number"},[s._v("467")]),n("br"),n("span",{staticClass:"line-number"},[s._v("468")]),n("br"),n("span",{staticClass:"line-number"},[s._v("469")]),n("br"),n("span",{staticClass:"line-number"},[s._v("470")]),n("br"),n("span",{staticClass:"line-number"},[s._v("471")]),n("br"),n("span",{staticClass:"line-number"},[s._v("472")]),n("br"),n("span",{staticClass:"line-number"},[s._v("473")]),n("br"),n("span",{staticClass:"line-number"},[s._v("474")]),n("br"),n("span",{staticClass:"line-number"},[s._v("475")]),n("br"),n("span",{staticClass:"line-number"},[s._v("476")]),n("br"),n("span",{staticClass:"line-number"},[s._v("477")]),n("br"),n("span",{staticClass:"line-number"},[s._v("478")]),n("br"),n("span",{staticClass:"line-number"},[s._v("479")]),n("br"),n("span",{staticClass:"line-number"},[s._v("480")]),n("br"),n("span",{staticClass:"line-number"},[s._v("481")]),n("br"),n("span",{staticClass:"line-number"},[s._v("482")]),n("br"),n("span",{staticClass:"line-number"},[s._v("483")]),n("br"),n("span",{staticClass:"line-number"},[s._v("484")]),n("br"),n("span",{staticClass:"line-number"},[s._v("485")]),n("br"),n("span",{staticClass:"line-number"},[s._v("486")]),n("br"),n("span",{staticClass:"line-number"},[s._v("487")]),n("br"),n("span",{staticClass:"line-number"},[s._v("488")]),n("br"),n("span",{staticClass:"line-number"},[s._v("489")]),n("br"),n("span",{staticClass:"line-number"},[s._v("490")]),n("br"),n("span",{staticClass:"line-number"},[s._v("491")]),n("br"),n("span",{staticClass:"line-number"},[s._v("492")]),n("br"),n("span",{staticClass:"line-number"},[s._v("493")]),n("br"),n("span",{staticClass:"line-number"},[s._v("494")]),n("br"),n("span",{staticClass:"line-number"},[s._v("495")]),n("br"),n("span",{staticClass:"line-number"},[s._v("496")]),n("br"),n("span",{staticClass:"line-number"},[s._v("497")]),n("br"),n("span",{staticClass:"line-number"},[s._v("498")]),n("br"),n("span",{staticClass:"line-number"},[s._v("499")]),n("br"),n("span",{staticClass:"line-number"},[s._v("500")]),n("br"),n("span",{staticClass:"line-number"},[s._v("501")]),n("br"),n("span",{staticClass:"line-number"},[s._v("502")]),n("br"),n("span",{staticClass:"line-number"},[s._v("503")]),n("br"),n("span",{staticClass:"line-number"},[s._v("504")]),n("br"),n("span",{staticClass:"line-number"},[s._v("505")]),n("br"),n("span",{staticClass:"line-number"},[s._v("506")]),n("br"),n("span",{staticClass:"line-number"},[s._v("507")]),n("br"),n("span",{staticClass:"line-number"},[s._v("508")]),n("br"),n("span",{staticClass:"line-number"},[s._v("509")]),n("br"),n("span",{staticClass:"line-number"},[s._v("510")]),n("br"),n("span",{staticClass:"line-number"},[s._v("511")]),n("br"),n("span",{staticClass:"line-number"},[s._v("512")]),n("br"),n("span",{staticClass:"line-number"},[s._v("513")]),n("br"),n("span",{staticClass:"line-number"},[s._v("514")]),n("br"),n("span",{staticClass:"line-number"},[s._v("515")]),n("br"),n("span",{staticClass:"line-number"},[s._v("516")]),n("br"),n("span",{staticClass:"line-number"},[s._v("517")]),n("br"),n("span",{staticClass:"line-number"},[s._v("518")]),n("br"),n("span",{staticClass:"line-number"},[s._v("519")]),n("br"),n("span",{staticClass:"line-number"},[s._v("520")]),n("br"),n("span",{staticClass:"line-number"},[s._v("521")]),n("br"),n("span",{staticClass:"line-number"},[s._v("522")]),n("br"),n("span",{staticClass:"line-number"},[s._v("523")]),n("br"),n("span",{staticClass:"line-number"},[s._v("524")]),n("br"),n("span",{staticClass:"line-number"},[s._v("525")]),n("br"),n("span",{staticClass:"line-number"},[s._v("526")]),n("br"),n("span",{staticClass:"line-number"},[s._v("527")]),n("br"),n("span",{staticClass:"line-number"},[s._v("528")]),n("br"),n("span",{staticClass:"line-number"},[s._v("529")]),n("br"),n("span",{staticClass:"line-number"},[s._v("530")]),n("br"),n("span",{staticClass:"line-number"},[s._v("531")]),n("br"),n("span",{staticClass:"line-number"},[s._v("532")]),n("br"),n("span",{staticClass:"line-number"},[s._v("533")]),n("br"),n("span",{staticClass:"line-number"},[s._v("534")]),n("br"),n("span",{staticClass:"line-number"},[s._v("535")]),n("br"),n("span",{staticClass:"line-number"},[s._v("536")]),n("br"),n("span",{staticClass:"line-number"},[s._v("537")]),n("br"),n("span",{staticClass:"line-number"},[s._v("538")]),n("br"),n("span",{staticClass:"line-number"},[s._v("539")]),n("br"),n("span",{staticClass:"line-number"},[s._v("540")]),n("br"),n("span",{staticClass:"line-number"},[s._v("541")]),n("br"),n("span",{staticClass:"line-number"},[s._v("542")]),n("br"),n("span",{staticClass:"line-number"},[s._v("543")]),n("br"),n("span",{staticClass:"line-number"},[s._v("544")]),n("br"),n("span",{staticClass:"line-number"},[s._v("545")]),n("br"),n("span",{staticClass:"line-number"},[s._v("546")]),n("br"),n("span",{staticClass:"line-number"},[s._v("547")]),n("br"),n("span",{staticClass:"line-number"},[s._v("548")]),n("br"),n("span",{staticClass:"line-number"},[s._v("549")]),n("br"),n("span",{staticClass:"line-number"},[s._v("550")]),n("br"),n("span",{staticClass:"line-number"},[s._v("551")]),n("br"),n("span",{staticClass:"line-number"},[s._v("552")]),n("br"),n("span",{staticClass:"line-number"},[s._v("553")]),n("br"),n("span",{staticClass:"line-number"},[s._v("554")]),n("br"),n("span",{staticClass:"line-number"},[s._v("555")]),n("br"),n("span",{staticClass:"line-number"},[s._v("556")]),n("br"),n("span",{staticClass:"line-number"},[s._v("557")]),n("br"),n("span",{staticClass:"line-number"},[s._v("558")]),n("br"),n("span",{staticClass:"line-number"},[s._v("559")]),n("br"),n("span",{staticClass:"line-number"},[s._v("560")]),n("br"),n("span",{staticClass:"line-number"},[s._v("561")]),n("br"),n("span",{staticClass:"line-number"},[s._v("562")]),n("br"),n("span",{staticClass:"line-number"},[s._v("563")]),n("br"),n("span",{staticClass:"line-number"},[s._v("564")]),n("br"),n("span",{staticClass:"line-number"},[s._v("565")]),n("br"),n("span",{staticClass:"line-number"},[s._v("566")]),n("br"),n("span",{staticClass:"line-number"},[s._v("567")]),n("br"),n("span",{staticClass:"line-number"},[s._v("568")]),n("br"),n("span",{staticClass:"line-number"},[s._v("569")]),n("br"),n("span",{staticClass:"line-number"},[s._v("570")]),n("br"),n("span",{staticClass:"line-number"},[s._v("571")]),n("br"),n("span",{staticClass:"line-number"},[s._v("572")]),n("br"),n("span",{staticClass:"line-number"},[s._v("573")]),n("br"),n("span",{staticClass:"line-number"},[s._v("574")]),n("br"),n("span",{staticClass:"line-number"},[s._v("575")]),n("br"),n("span",{staticClass:"line-number"},[s._v("576")]),n("br"),n("span",{staticClass:"line-number"},[s._v("577")]),n("br"),n("span",{staticClass:"line-number"},[s._v("578")]),n("br"),n("span",{staticClass:"line-number"},[s._v("579")]),n("br"),n("span",{staticClass:"line-number"},[s._v("580")]),n("br"),n("span",{staticClass:"line-number"},[s._v("581")]),n("br"),n("span",{staticClass:"line-number"},[s._v("582")]),n("br"),n("span",{staticClass:"line-number"},[s._v("583")]),n("br"),n("span",{staticClass:"line-number"},[s._v("584")]),n("br"),n("span",{staticClass:"line-number"},[s._v("585")]),n("br"),n("span",{staticClass:"line-number"},[s._v("586")]),n("br"),n("span",{staticClass:"line-number"},[s._v("587")]),n("br"),n("span",{staticClass:"line-number"},[s._v("588")]),n("br"),n("span",{staticClass:"line-number"},[s._v("589")]),n("br"),n("span",{staticClass:"line-number"},[s._v("590")]),n("br"),n("span",{staticClass:"line-number"},[s._v("591")]),n("br"),n("span",{staticClass:"line-number"},[s._v("592")]),n("br"),n("span",{staticClass:"line-number"},[s._v("593")]),n("br"),n("span",{staticClass:"line-number"},[s._v("594")]),n("br"),n("span",{staticClass:"line-number"},[s._v("595")]),n("br"),n("span",{staticClass:"line-number"},[s._v("596")]),n("br"),n("span",{staticClass:"line-number"},[s._v("597")]),n("br"),n("span",{staticClass:"line-number"},[s._v("598")]),n("br"),n("span",{staticClass:"line-number"},[s._v("599")]),n("br"),n("span",{staticClass:"line-number"},[s._v("600")]),n("br"),n("span",{staticClass:"line-number"},[s._v("601")]),n("br"),n("span",{staticClass:"line-number"},[s._v("602")]),n("br"),n("span",{staticClass:"line-number"},[s._v("603")]),n("br"),n("span",{staticClass:"line-number"},[s._v("604")]),n("br"),n("span",{staticClass:"line-number"},[s._v("605")]),n("br"),n("span",{staticClass:"line-number"},[s._v("606")]),n("br"),n("span",{staticClass:"line-number"},[s._v("607")]),n("br"),n("span",{staticClass:"line-number"},[s._v("608")]),n("br"),n("span",{staticClass:"line-number"},[s._v("609")]),n("br"),n("span",{staticClass:"line-number"},[s._v("610")]),n("br"),n("span",{staticClass:"line-number"},[s._v("611")]),n("br"),n("span",{staticClass:"line-number"},[s._v("612")]),n("br"),n("span",{staticClass:"line-number"},[s._v("613")]),n("br"),n("span",{staticClass:"line-number"},[s._v("614")]),n("br")])])],1)}),[],!1,null,null,null);t.default=e.exports}}]);